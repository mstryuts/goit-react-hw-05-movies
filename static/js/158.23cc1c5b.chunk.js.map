{"version":3,"file":"static/js/158.23cc1c5b.chunk.js","mappings":"mPAEaA,EAAaC,EAAAA,GAAAA,KAAH,oHAOVC,EAAcD,EAAAA,GAAAA,MAAH,qhBAqBXE,EAAeF,EAAAA,GAAAA,OAAH,gc,6CC4BzB,EApDe,WACb,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAASR,EAAaS,IAAI,UAChC,GAAKD,EAAL,CACA,IAAME,EAAc,mCAAG,WAAMF,GAAN,0FACKG,EAAAA,EAAAA,IAASH,GADd,gBACbI,EADa,EACbA,QACRR,EAASQ,GAFY,2CAAH,sDAIpBF,EAAeF,EALI,CAMpB,GAAE,CAACR,KAEJO,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMQ,EAAO,mCAAG,uGACYF,EAAAA,EAAAA,IAASN,GADrB,gBACNO,EADM,EACNA,QAERR,EAASQ,GAHK,2CAAH,qDAKbC,GANC,CAOF,GAAE,CAACR,IAeJ,OACE,gCACG,KACD,UAACV,EAAD,CAAYmB,SAhBK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAcF,EAAKG,SAASC,MAAMC,MACb,KAAvBH,EAAYI,QAIhBtB,EAAgB,CAAEO,OAAQW,IAC1Bb,EAAiBa,GACjBF,EAAKO,SALHC,MAAM,QAMT,EAKG,WACE,SAAC5B,EAAD,CAAa6B,KAAK,QAAQC,KAAK,UAC/B,SAAC7B,EAAD,+BAEF,SAAC8B,EAAA,EAAD,CAAWC,OAAQ1B,MAGxB,C","sources":["pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  //   position: relative;\n  //   width: 300px;\n  //   margin: 0 auto;\n  display: flex;\n`;\n\nexport const SearchInput = styled.input`\n  position: relative;\n  display: block;\n  width: 500px;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  appearance: none;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n`;\nexport const SearchButton = styled.button`\n  position: relative;\n  display: inline-block;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  background-color: #eee;\n  border: 1px solid #bdbdbd;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  border-radius: 0.25rem;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-left-width: 0;\n`;\n","import { SearchForm, SearchButton, SearchInput } from './Movies.styled';\nimport { getMovie } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movie, setMovie] = useState([]);\n  const [searchRequest, setSearchRequest] = useState('');\n\n  useEffect(() => {\n    const search = searchParams.get('search');\n    if (!search) return;\n    const loadingContent = async search => {\n      const { results } = await getMovie(search);\n      setMovie(results);\n    };\n    loadingContent(search);\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const getData = async () => {\n      const { results } = await getMovie(searchRequest);\n\n      setMovie(results);\n    };\n    getData();\n  }, [searchRequest]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchQuery = form.elements.input.value;\n    if (searchQuery.trim() === '') {\n      alert('empty');\n      return;\n    }\n    setSearchParams({ search: searchQuery });\n    setSearchRequest(searchQuery);\n    form.reset();\n  };\n\n  return (\n    <>\n      {' '}\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput name=\"input\" type=\"text\" />\n        <SearchButton>ðŸŽ¦</SearchButton>\n      </SearchForm>\n      <MovieList movies={movie} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","styled","SearchInput","SearchButton","useSearchParams","searchParams","setSearchParams","useState","movie","setMovie","searchRequest","setSearchRequest","useEffect","search","get","loadingContent","getMovie","results","getData","onSubmit","e","preventDefault","form","currentTarget","searchQuery","elements","input","value","trim","reset","alert","name","type","MovieList","movies"],"sourceRoot":""}